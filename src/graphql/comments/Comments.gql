mutation PostComment($ideaComment: idea_comments_insert_input!) {
	addIdeaComment: insert_idea_comments_one(object: $ideaComment) {
		ideaId
		id
		value
	}
}

mutation PostReply(
	$ideaReply: idea_comment_replies_insert_input!
	$commentId: uuid!
) {
	addIdeaReply: insert_idea_comment_replies_one(object: $ideaReply) {
		commentId
		id
		value
	}
	update_idea_comments_by_pk(
		pk_columns: { id: $commentId }
		_inc: { totalReplies: 1 }
	) {
		id
	}
}

query CommentsForIdea($ideaId: uuid!, $offset: Int) {
	comments: idea_comments(
		where: { ideaId: { _eq: $ideaId } }
		order_by: { updatedAt: desc }
		offset: $offset
		limit: 8
	) {
		id
		updatedAt
		value
		ideaId
		totalReplies
		user {
			id
			displayName
			avatarUrl
			email
		}
	}
	totalComments: idea_comments_aggregate(
		where: { ideaId: { _eq: $ideaId } }
	) {
		aggregate {
			count(columns: id)
		}
	}
}

# query CommentsForIdea($first: Int!, $after: String!, $ideaId: uuid!) {
# 	idea_comments_connection(
# 		first: $first
# 		after: $after
# 		order_by: { updated_at: desc }
# 		where: { idea_id: { _eq: $ideaId } }
# 	) {
# 		pageInfo {
# 			endCursor
# 			hasNextPage
# 		}
# 		edges {
# 			node {
# 				updated_at
# 				value
# 				user {
# 					first_name
# 					avatar_url
# 				}
# 			}
# 		}
# 	}
# }

query RepliesForComment($commentId: uuid!) {
	replies: idea_comment_replies(
		where: { commentId: { _eq: $commentId } }
		order_by: { updatedAt: asc }
	) {
		id
		commentId
		value
		updatedAt
		user {
			id
			displayName
			avatarUrl
			email
		}
	}
}
